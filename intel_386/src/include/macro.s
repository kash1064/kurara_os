;************************************************************************
; 関数呼び出し用マクロ
;
; 使い方：
;	cdecl	func [, param1[, param2[, ...]]]
;
;************************************************************************

; NOTE: マクロ引数の最後に「.nolist」を指定することで、リスト出力を抑止
%macro  cdecl 1-*.nolist

;************************************************************************
; NOTE: 引数
;************************************************************************
; マクロの引数は、引数の数を「1-*」と記述することで、1つ以上の可変引数とすることができる。
; 実際にマクロに渡された引数の数は「%0」で知ることができ、「%{x:y}」という記述を用いて、範囲を指定して取得することもできる
;************************************************************************

	; NOTE: 「%rep」の引数には、引数の数を示す%0から呼び出し関数分を除いた「%0 - 1」を指定
	%rep  %0 - 1

		; NOTE: PUSH命令の引数に指定されている「%{-1:-1}」は、引数リストの最後（右端）を指す
		push	%{-1:-1}

		;************************************************************************
		; NOTE: %rotate
		;************************************************************************
		; マクロに与えられた最初の引数は、%1でアクセスすることができるが、
		; 「%rotate <数値>」を使用すると、引数の位置をずらすことができる。
		; 「％rotate」に渡された引数がプラスであれば左、マイナスであれば右に、マクロに渡されたすべての引数が回転する。
		;************************************************************************
		%rotate -1
	%endrep 
	%rotate -1

		call	%1

	%if 1 < %0
		; NOTE: NASMに組み込まれている「__BITS__」マクロを使用して16ビットモードと32ビットモードの判定
		; NOTE: 3bit 右にシフトすると、1/8 の値が得られるので、それを利用してスタックポインタを破棄
		add		sp, (__BITS__ >> 3) * (%0 - 1)
	%endif

%endmacro

;************************************************************************
; 割り込みベクタ設定用
;
; 使い方：
;	set_vect	ベクタ番号, 割り込み処理 [, フラグ]
;
;************************************************************************
%macro  set_vect 1-*.nolist
		push	eax
		push	edi

		mov		edi, VECT_BASE + (%1 * 8)		; ベクタアドレス;

		; NOTE: %2 は2つ目の引数？
		mov		eax, %2

	%if 3 == %0
		mov		[edi + 4], %3					; フラグ
	%endif

		mov		[edi + 0], ax					; 例外アドレス[15: 0]
		shr		eax, 16							; 
		mov		[edi + 6], ax					; 例外アドレス[31:16]

		pop		edi
		pop		eax
%endmacro

;************************************************************************
; ポート出力用
;
; 使い方：
;	outp	ポート番号, 出力値
;
;************************************************************************
%macro  outp 2
		mov		al, %2
		out		%1, al
%endmacro

;************************************************************************
; ディスクリプタの情報を設定
;
; 使い方：
;	set_desc	ディスクリプタ, ベース
;
;************************************************************************
%macro  set_desc 2-* 
		push	eax
		push	edi

		mov		edi, %1							; ディスクリプタアドレス
		mov		eax, %2							; ベースアドレス

	%if 3 == %0
		mov		[edi + 0], %3					; リミット
	%endif

		mov		[edi + 2], ax					; ベース（[15: 0]）
		shr		eax, 16							; 
		mov		[edi + 4], al					; ベース（[23:16]）
		mov		[edi + 7], ah					; ベース（[31:24]）

		pop		edi
		pop		eax
%endmacro

;************************************************************************
; ゲートディスクリプタのオフセットを設定
;
; 使い方：
;	set_gate	ディスクリプタ, オフセット
;
;************************************************************************
%macro  set_gate 2-* 
		push	eax
		push	edi

		mov		edi, %1							; ディスクリプタアドレス
		mov		eax, %2							; ベースアドレス

		mov		[edi + 0], ax					; ベース（[15: 0]）
		shr		eax, 16							; 
		mov		[edi + 6], ax					; ベース（[31:16]）

		pop		edi
		pop		eax
%endmacro

;************************************************************************
; NOTE: 構造体に使えるデータとデータ型
;************************************************************************
; データ型 : バイト数
; resb : 1
; resw : 2
; resd : 4
; resq : 8
;************************************************************************

;-----------------------------------------------
;	ドライブパラメータ
;-----------------------------------------------
struc drive
		.no				resw	1				; ドライブ番号
		.cyln			resw	1				; C:シリンダ
		.head			resw	1				; H:ヘッド
		.sect			resw	1				; S:セクタ
endstruc

;-----------------------------------------------
;	リングバッファ
;-----------------------------------------------
%define		RING_ITEM_SIZE		(1 << 4)
%define		RING_INDEX_MASK		(RING_ITEM_SIZE - 1)

struc ring_buff
		.rp				resd	1				; RP:書き込み位置
		.wp				resd	1				; WP:読み込み位置
		.item			resb	RING_ITEM_SIZE	; バッファ
endstruc

;-----------------------------------------------
;	バラ曲線描画パラメータ
;-----------------------------------------------
struc rose
		.x0				resd	1				; 左上座標：X0
		.y0				resd	1				; 左上座標：Y0
		.x1				resd	1				; 右下座標：X1
		.y1				resd	1				; 右下座標：Y1

		.n				resd	1				; 変数：n
		.d				resd	1				; 変数：d

		.color_x		resd	1				; 描画色：X軸
		.color_y		resd	1				; 描画色：Y軸
		.color_z		resd	1				; 描画色：枠
		.color_s		resd	1				; 描画色：文字
		.color_f		resd	1				; 描画色：グラフ描画色
		.color_b		resd	1				; 描画色：グラフ消去色

		.title			resb	16				; タイトル
endstruc

